@use 'sass:math';
/* trade页面的适配方案
 * 可以使用 rem(设计稿里面的原始尺寸大小px)； rem(100px);
 * 也可以用设计稿里面的原始尺寸大小px / 100 (单位直接写rem)； 100px = 1rem; 例如20px = 0.2rem;
*/

@function rem($px) {
    // @return $px / 75px * 1rem;
    @return math.div($px, 75px) * 1rem;
}

@mixin clfix() {
    zoom: 1;
    &::after {
        display: block;
        clear: both;
        height: 0;
        font-size: 0;
        line-height: 0;
        visibility: hidden;
        content: '.';
    }
}

@mixin ellipsis() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin text_wrap {
    word-wrap: break-word;
    word-break: break-all;
}

@mixin ellipsisLn($line) {
    @include text_wrap;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
}

@mixin single-line-clamp() {
    @include text_wrap;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin opacity($n) {
    -moz-opacity: $n;
    opacity: $n;
    filter: alpha(opacity=#{$n * 100});
}

@mixin active() {
    &:active {
        box-shadow: 0 0 999px rgba(0, 0, 0, 0.05) inset;
    }
}
@mixin hover() {
    &:hover{
        box-shadow: 0 0 0 999px rgba($color: #000000, $alpha: .2) inset;
    }
}

@mixin single-line-clamp() {
    @include text_wrap;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin scroll() {
    scrollbar-color: #DFDFDF white;
    scrollbar-width: thin;
    &::-webkit-scrollbar {
        width: 3px;
        height: 3px;
    }
    &::-webkit-scrollbar-track {
        background: #EEE;
        border-radius: 10px;
        box-shadow: 0 0 3px #DFDFDF inset;
    }
    &::-webkit-scrollbar-thumb {
        background: #999;
        border: 1px #808080 solid;
        border-radius: 10px;
    }
    &::-webkit-scrollbar-thumb:hover {
        background: #7D7D7D;
    }
}

@mixin scroll-pc() {
    // scrollbar-width: thin;
    // &::-webkit-scrollbar {
    //     width: 7px;
    //     height: 7px;
    // }
    // &::-webkit-scrollbar-track {
    //     background: var(--bgColor);
    //     border-radius: 10px;
	// 	outline: 1px solid var(--lineColor);
	// 	outline-offset: -1px;
	// 	border: 1px solid var(--lineColor);
    // }
    // &::-webkit-scrollbar-thumb {
    //     background: #C2C2C2;
    //     border-radius: 10px;
    // }
    // &::-webkit-scrollbar-thumb:hover {
    //     background: #7D7D7D;
    // }
}

@mixin borderline($color: #ebedf0) {
    position: absolute;
    right: 0;
    left: 0;
    z-index: 1;
    box-sizing: border-box;
    border-bottom: 1px solid $color;
    transform: scaleY(0.5);
    content: '';
    pointer-events: none;
}

@mixin triangle($direction, $width, $height, $color) {
    @if not index('up' 'up-right' 'right' 'down-right' 'down' 'down-left' 'left' 'up-left', $direction) {
        @error 'Direction must be `up`, `up-right`, `right`, `down-right`, ' +
            '`down`, `down-left`, `left` or `up-left`.';
    }
    @else if not _is-color($color) {
        @error '`#{$color}` is not a valid color for the `$color` argument in ' +
            'the `triangle` mixin.';
    }
    @else {
        border-style: solid;
        height: 0;
        width: 0;
        @if $direction == 'up' {
            border-color: transparent transparent $color;
            border-width: 0 ($width / 2) $height;
        }
        @else if $direction == 'up-right' {
            border-color: transparent $color transparent transparent;
            border-width: 0 $width $width 0;
        }
        @else if $direction == 'right' {
            border-color: transparent transparent transparent $color;
            border-width: ($height / 2) 0 ($height / 2) $width;
        }
        @else if $direction == 'down-right' {
            border-color: transparent transparent $color;
            border-width: 0 0 $width $width;
        }
        @else if $direction == 'down' {
            border-color: $color transparent transparent;
            border-width: $height ($width / 2) 0;
        }
        @else if $direction == 'down-left' {
            border-color: transparent transparent transparent $color;
            border-width: $width 0 0 $width;
        }
        @else if $direction == 'left' {
            border-color: transparent $color transparent transparent;
            border-width: ($height / 2) $width ($height / 2) 0;
        }
        @else if $direction == 'up-left' {
            border-color: $color transparent transparent;
            border-width: $width $width 0 0;
        }
    }
}

// funds
@mixin bg-image($url, $width, $height) {
    background-image: url($url + '@2x.png');
    background-repeat: no-repeat;
    background-size: $width, $height;
    @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3) {
        background-image: url($url + '@3x.png');
    }
}

// input 底边框
@mixin ftbd() {
    position: relative;
    padding-bottom: rem(14px);
    &::before {
        position: absolute;
        bottom: 0;
        left: 0;
        box-sizing: border-box;
        width: 100%;
        height: rem(14px);
        border: 1px solid var(--bdColor);
        border-top: 0;
        content: '';
    }
}

// 字体 
@mixin font() {
    font-family: 'Microsoft Yahei';
}

// 兼容PC/mobile 1px边框的函数
@mixin bd {
    height: 1px;
    background-color: #dedede;
    @media screen and (min-resolution: 2dppx) {
        transform: scaleY(.5);
    }
}


// pc端自适应padding
@mixin pagePadding() {
    padding: 0 16px;
    @media screen and (min-width: 1600px) {
        padding: 0 64px;
    }
    @media screen and (min-width:1200px) and (max-width:1600px){
        padding: 0 32px;
    }
}